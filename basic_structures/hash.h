#ifndef HASH_AHRT
#define HASH_AHRT

typedef struct HASH {
    Generic *table;
} HASH;

Generic HASH_Create() {
    HASH *new_hash = (HASH*) malloc(sizeof(HASH));
    new_hash->table = calloc(MAX_HASH_SIZE, sizeof(Generic));
    return new_hash;
}

Generic HASH_Insert(HASH *hash, Generic data, Integer index) {
    hash->table[index] = data;
}

void HASH_Get_List_Sequence(LIST *list, HASH *hash, Byte byte) {
	LIST_NODE *current = list->head;
	while(current != NULL) {
		LIST_Insert_Tail(hash->table[byte], current->data);
		current = current->next;
	}
	return;
}

#endif
